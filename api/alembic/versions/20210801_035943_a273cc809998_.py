"""empty message

Revision ID: a273cc809998
Revises: 
Create Date: 2021-08-01 03:59:43.017176

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a273cc809998'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('genre',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('library',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('publisher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('series',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('books',
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('library', sa.Integer(), nullable=False),
    sa.Column('author', sa.Integer(), nullable=True),
    sa.Column('genre', sa.Integer(), nullable=True),
    sa.Column('publisher', sa.Integer(), nullable=True),
    sa.Column('series', sa.Integer(), nullable=True),
    sa.Column('series_no', sa.Integer(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('sha1', sa.String(), nullable=True),
    sa.Column('page', sa.Integer(), nullable=True),
    sa.Column('add_date', sa.DateTime(), nullable=True),
    sa.Column('file_date', sa.DateTime(), nullable=True),
    sa.Column('import_file_name', sa.String(), nullable=True),
    sa.Column('is_shered', sa.Boolean(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['author'], ['author.id'], ),
    sa.ForeignKeyConstraint(['genre'], ['genre.id'], ),
    sa.ForeignKeyConstraint(['library'], ['library.id'], ),
    sa.ForeignKeyConstraint(['publisher'], ['publisher.id'], ),
    sa.ForeignKeyConstraint(['series'], ['series.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_books_uuid'), 'books', ['uuid'], unique=False)
    op.create_table('books_metadata',
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('book_uuid', sa.String(), nullable=False),
    sa.Column('last_open_date', sa.DateTime(), nullable=True),
    sa.Column('read_times', sa.Integer(), nullable=True),
    sa.Column('open_page', sa.Integer(), nullable=True),
    sa.Column('rate', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book_uuid'], ['books.uuid'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'book_uuid')
    )
    op.create_table('tag_to_book',
    sa.Column('book_uuid', sa.String(), nullable=True),
    sa.Column('tags_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['book_uuid'], ['books.uuid'], ),
    sa.ForeignKeyConstraint(['tags_id'], ['tags.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tag_to_book')
    op.drop_table('books_metadata')
    op.drop_index(op.f('ix_books_uuid'), table_name='books')
    op.drop_table('books')
    op.drop_table('users')
    op.drop_table('tags')
    op.drop_table('series')
    op.drop_table('publisher')
    op.drop_table('library')
    op.drop_table('genre')
    op.drop_table('author')
    # ### end Alembic commands ###
