"""Fix on delete

Revision ID: e45a2ff1d4d7
Revises: ddeb96a13f9e
Create Date: 2023-09-30 01:44:58.219018

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e45a2ff1d4d7'
down_revision = 'ddeb96a13f9e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('book_to_author_book_uuid_fkey', 'book_to_author', type_='foreignkey')
    op.drop_constraint('book_to_author_author_id_fkey', 'book_to_author', type_='foreignkey')
    op.create_foreign_key(None, 'book_to_author', 'books', ['book_uuid'], ['uuid'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'book_to_author', 'authors', ['author_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('library_to_user_library_id_fkey', 'library_to_user', type_='foreignkey')
    op.drop_constraint('library_to_user_user_id_fkey', 'library_to_user', type_='foreignkey')
    op.create_foreign_key(None, 'library_to_user', 'users', ['user_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'library_to_user', 'librarys', ['library_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.drop_constraint('tag_to_book_tags_id_fkey', 'tag_to_book', type_='foreignkey')
    op.drop_constraint('tag_to_book_book_uuid_fkey', 'tag_to_book', type_='foreignkey')
    op.create_foreign_key(None, 'tag_to_book', 'tags', ['tags_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
    op.create_foreign_key(None, 'tag_to_book', 'books', ['book_uuid'], ['uuid'], onupdate='CASCADE', ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tag_to_book', type_='foreignkey')
    op.drop_constraint(None, 'tag_to_book', type_='foreignkey')
    op.create_foreign_key('tag_to_book_book_uuid_fkey', 'tag_to_book', 'books', ['book_uuid'], ['uuid'])
    op.create_foreign_key('tag_to_book_tags_id_fkey', 'tag_to_book', 'tags', ['tags_id'], ['id'])
    op.drop_constraint(None, 'library_to_user', type_='foreignkey')
    op.drop_constraint(None, 'library_to_user', type_='foreignkey')
    op.create_foreign_key('library_to_user_user_id_fkey', 'library_to_user', 'users', ['user_id'], ['id'])
    op.create_foreign_key('library_to_user_library_id_fkey', 'library_to_user', 'librarys', ['library_id'], ['id'])
    op.drop_constraint(None, 'book_to_author', type_='foreignkey')
    op.drop_constraint(None, 'book_to_author', type_='foreignkey')
    op.create_foreign_key('book_to_author_author_id_fkey', 'book_to_author', 'authors', ['author_id'], ['id'])
    op.create_foreign_key('book_to_author_book_uuid_fkey', 'book_to_author', 'books', ['book_uuid'], ['uuid'])
    # ### end Alembic commands ###
