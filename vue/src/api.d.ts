/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Api Users */
        get: operations["read_api_users_api_users_get"];
        put?: never;
        /** Post Api Users */
        post: operations["post_api_users_api_users_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/users/me/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Api Users Me */
        get: operations["read_api_users_me_api_users_me__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Login For Access Token */
        post: operations["login_for_access_token_api_auth_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/setup": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Api Auth Setup */
        post: operations["api_auth_setup_api_auth_setup_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/auth/validate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Read Auth Validate */
        get: operations["read_auth_validate_api_auth_validate_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/librarys": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Api Library */
        get: operations["get_api_library_api_librarys_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/books": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Api Books */
        get: operations["get_api_books_api_books_get"];
        /** Change Book Data */
        put: operations["change_book_data_api_books_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/books/{book_uuid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /** Delete Book Data */
        delete: operations["delete_book_data_api_books__book_uuid__delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/media/books/cache": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** キャッシュサイズの確認 */
        get: operations["get_media_books_cache_media_books_cache_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/media/books/duplicate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 重複本の確認 */
        get: operations["get_media_books_duplicate_media_books_duplicate_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/media/books/{uuid}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** サムネイル取得 */
        get: operations["get_media_books_uuid_media_books__uuid__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/media/books/{uuid}/{page}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** ページ取得 */
        get: operations["media_books_uuid_page_media_books__uuid___page__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/media/books": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** 本の一括変換タスク実行 */
        patch: operations["patch_media_books__media_books_patch"];
        trace?: never;
    };
    "/media/library": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * ライブラリのロードやエクスポート
         * @description - state=load ライブラリのロード
         *     - state=export ライブラリのエクスポート
         */
        patch: operations["patch_media_library_media_library_patch"];
        trace?: never;
    };
    "/api/books/tag": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Show Tag */
        get: operations["show_tag_api_books_tag_get"];
        put?: never;
        /** Append Tag */
        post: operations["append_tag_api_books_tag_post"];
        /** Delete Tag */
        delete: operations["delete_tag_api_books_tag_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/authors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get Api Library */
        get: operations["get_api_library_api_authors_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /** Delete Api Books Uuid Authors */
        patch: operations["delete_api_books_uuid_authors_api_authors_patch"];
        trace?: never;
    };
    "/api/books/{book_uuid}/authors": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Post Api Books Uuid Authors */
        post: operations["post_api_books_uuid_authors_api_books__book_uuid__authors_post"];
        /** Delete Api Books Uuid Authors */
        delete: operations["delete_api_books_uuid_authors_api_books__book_uuid__authors_delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/books/user-data": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /** 本のユーザデータ（レート）を一括更新 */
        put: operations["change_user_data_api_books_user_data_put"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * 開いているページ、読んだ回数の管理
         * @description - 本を開いたとき status=open, page=0
         *     - 本を途中で閉じた時 status=pause, page=5
         *     - 本を読み終わったとき status=close, page=None
         */
        patch: operations["signal_book_status_api_books_user_data_patch"];
        trace?: never;
    };
    "/api/version": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Version
         * @description 初期化済みか判定用
         */
        get: operations["get_version_api_version_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AuthorGet */
        AuthorGet: {
            /** Id */
            id?: number;
            /** Name */
            name?: string;
            /** Isfavorite */
            isFavorite: boolean;
        };
        /** Body_login_for_access_token_api_auth_post */
        Body_login_for_access_token_api_auth_post: {
            /** Grant Type */
            grant_type?: string | null;
            /** Username */
            username: string;
            /** Password */
            password: string;
            /**
             * Scope
             * @default
             */
            scope: string;
            /** Client Id */
            client_id?: string | null;
            /** Client Secret */
            client_secret?: string | null;
        };
        /** BookAuthorDelete */
        BookAuthorDelete: {
            /** Authorid */
            authorId: number;
        };
        /** BookAuthorPost */
        BookAuthorPost: {
            /** Authorid */
            authorId?: number;
            /** Authorname */
            authorName?: string;
        };
        /** BookAuthors */
        BookAuthors: {
            /** Id */
            id: number;
            /** Name */
            name: string;
            /** Description */
            description?: string | null;
            /** Isfavorite */
            isFavorite: boolean;
        };
        /** BookBase */
        BookBase: {
            /** Uuid */
            uuid: string;
            /** Userid */
            userId: string;
            /** Title */
            title?: string | null;
            /** Authors */
            authors: components["schemas"]["BookAuthors"][];
            publisher: components["schemas"]["BookPublisher"];
            /** Isshered */
            isShered: boolean;
            /** Chached */
            chached: boolean;
            /** Libraryid */
            libraryId: number;
            /** Genreid */
            genreId?: string | null;
            /** Tags */
            tags: components["schemas"]["BookTag"][];
            /** Size */
            size: number;
            /** Page */
            page: number;
            /** Sha1 */
            sha1: string;
            /** Importfilename */
            importFileName: string;
            /**
             * Adddate
             * Format: date-time
             */
            addDate: string;
            /**
             * Filedate
             * Format: date-time
             */
            fileDate: string;
            userData: components["schemas"]["BookUserDataBase"];
        };
        /** BookCacheCreate */
        BookCacheCreate: {
            /** Uuid */
            uuid: string;
            /** Height */
            height: number;
        };
        /** BookGet */
        BookGet: {
            /** Limit */
            limit: number;
            /** Offset */
            offset: number;
            /** Count */
            count: number;
            /** Rows */
            rows: components["schemas"]["BookBase"][];
        };
        /** BookPublisher */
        BookPublisher: {
            /**
             * Name
             * @default
             */
            name: string | null;
            /** Id */
            id?: number | null;
        };
        /** BookPut */
        BookPut: {
            /** Uuids */
            uuids: string[];
            /** Seriesno */
            seriesNo?: number;
            /** Series */
            series?: string;
            /** Author */
            author?: string;
            /** Title */
            title?: string;
            /** Publisher */
            publisher?: string;
            /** Genre */
            genre?: string;
            /** Libraryid */
            libraryId?: number;
        };
        /** BookTag */
        BookTag: {
            /** Id */
            id: number;
            /** Name */
            name: string;
        };
        /** BookTagBase */
        BookTagBase: {
            /** Uuids */
            uuids: string[];
            /** Name */
            name: string;
        };
        /** BookUserDataBase */
        BookUserDataBase: {
            /** Lastopendate */
            lastOpenDate?: string | null;
            /** Readtimes */
            readTimes?: number | null;
            /** Openpage */
            openPage?: number | null;
            /** Rate */
            rate?: number | null;
        };
        /** BookUserMetaDataPatch */
        BookUserMetaDataPatch: {
            /** Uuids */
            uuids: string[];
            /** Page */
            page?: number;
            /**
             * Status
             * @enum {string}
             */
            status: "open" | "close" | "pause";
        };
        /** BookUserMetaDataPut */
        BookUserMetaDataPut: {
            /** Uuids */
            uuids: string[];
            /** Rate */
            rate?: number;
        };
        /** GetLibrary */
        GetLibrary: {
            /** Count */
            count: number;
            /** Name */
            name: string;
            /** Id */
            id: number;
            /** Userid */
            userId: string;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** LibraryPatch */
        LibraryPatch: {
            /** @default load */
            state: components["schemas"]["LibraryPatchEnum"];
        };
        /**
         * LibraryPatchEnum
         * @enum {string}
         */
        LibraryPatchEnum: "export" | "load" | "export_uuid" | "fixmetadata" | "sim_all" | "rule";
        /** PatchAuthor */
        PatchAuthor: {
            /** Authorid */
            authorId: number;
            /** Isfavorite */
            isFavorite: boolean;
        };
        /** TokenRFC6749Response */
        TokenRFC6749Response: {
            /** Access Token */
            access_token: string;
            /** Token Type */
            token_type: string;
        };
        /** UserGet */
        UserGet: {
            /** Id */
            id?: string;
            /** Isadmin */
            isAdmin: boolean;
        };
        /** UserPost */
        UserPost: {
            /** Id */
            id?: string;
            /** Password */
            password: string;
        };
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
        /** Version */
        Version: {
            /** Initialized */
            initialized: boolean;
            /** Version */
            version: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    read_api_users_api_users_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserGet"][];
                };
            };
        };
    };
    post_api_users_api_users_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserPost"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_api_users_me_api_users_me__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserGet"];
                };
            };
        };
    };
    login_for_access_token_api_auth_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/x-www-form-urlencoded": components["schemas"]["Body_login_for_access_token_api_auth_post"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenRFC6749Response"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    api_auth_setup_api_auth_setup_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserPost"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    read_auth_validate_api_auth_validate_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_api_library_api_librarys_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetLibrary"][];
                };
            };
        };
    };
    get_api_books_api_books_get: {
        parameters: {
            query?: {
                uuid?: string;
                fileNameLike?: string;
                chached?: boolean;
                authorLike?: string;
                titleLike?: string;
                fullText?: string;
                rate?: number;
                seriesId?: string;
                genreId?: string;
                libraryId?: number;
                tag?: string;
                state?: string;
                limit?: number;
                offset?: number;
                sortKey?: string;
                sortDesc?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BookGet"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    change_book_data_api_books_put: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["BookPut"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_book_data_api_books__book_uuid__delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                book_uuid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_media_books_cache_media_books_cache_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    get_media_books_duplicate_media_books_duplicate_get: {
        parameters: {
            query?: {
                limit?: number;
                offset?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_media_books_uuid_media_books__uuid__get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                uuid: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    media_books_uuid_page_media_books__uuid___page__get: {
        parameters: {
            query?: {
                height?: number;
            };
            header?: never;
            path: {
                uuid: string;
                page: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    patch_media_books__media_books_patch: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BookCacheCreate"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    patch_media_library_media_library_patch: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LibraryPatch"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    show_tag_api_books_tag_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    append_tag_api_books_tag_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BookTagBase"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_tag_api_books_tag_delete: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BookTagBase"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_api_library_api_authors_get: {
        parameters: {
            query: {
                isFavorite: boolean;
                name?: string;
                nameLike?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AuthorGet"][];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_api_books_uuid_authors_api_authors_patch: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PatchAuthor"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    post_api_books_uuid_authors_api_books__book_uuid__authors_post: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                book_uuid: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BookAuthorPost"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    delete_api_books_uuid_authors_api_books__book_uuid__authors_delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                book_uuid: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["BookAuthorDelete"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    change_user_data_api_books_user_data_put: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["BookUserMetaDataPut"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    signal_book_status_api_books_user_data_patch: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["BookUserMetaDataPatch"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    get_version_api_version_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Version"];
                };
            };
        };
    };
}
